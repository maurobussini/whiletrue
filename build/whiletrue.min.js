//! whiletrue
//! Start/stop/pause/repeat: task runner in Javascript
//! version : 1.0.1
//! authors : maurobussini
//! license : MIT
//! built   : 2015-05-22
//! https://github.com/maurobussini/whiletrue
!function(a,b){"function"==typeof define&&define.amd?define([],b):"object"==typeof exports?module.exports=b():a.whiletrue=b()}(this,function(){function a(a,b,c){function d(){var a=Q.defer(),b=function(){var c={iterations:f.iterations,delay:f.delay},d=f.condition(c);0==d?a.resolve():e(c).then(function(){f.iterations++,setTimeout(b,f.delay)})};return b(),a.promise}function e(a){var b=Q.defer();return f.task(function(){b.resolve()},a),b.promise}if(!a)throw new Error("Argument 'condition' is invalid");if(!b)throw new Error("Argument 'task' is invalid");if(!c)throw new Error("Argument 'delay' is invalid");if("function"!=typeof a)throw new Error("Condition must be a function");if("function"!=typeof b)throw new Error("Task must be a function");if("number"!=typeof c)throw new Error("Delay must be a number");if(0>=c)throw new Error("Delay must be a number greater then zero");var f=this;return f.delay=c,f.condition=a,f.task=b,f.iterations=0,f.run=d,f}function b(b,c,d){return new a(b,c,d)}if(!Q)throw new Error("whiletrue requires 'Q' library");return b});