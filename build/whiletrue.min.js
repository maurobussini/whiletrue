//! whiletrue
//! Start/stop/pause/repeat: task runner in Javascript
//! version : 1.1.0
//! authors : maurobussini
//! license : MIT
//! built   : 2015-07-28
//! https://github.com/maurobussini/whiletrue
!function(a,b){"function"==typeof define&&define.amd?define(["q"],b):"object"==typeof exports?module.exports=b(require("q")):a.whiletrue=b(a.Q)}(this,function(a){function b(b,c,d){function e(b){var c=a.defer();return setTimeout(function(){h(b).then(function(){i.iterations++;var a={iterations:i.iterations,delay:b.delay,index:b.index};c.resolve(a)})},i.delay),c.promise}function f(){for(var b=a.defer(),c=[],d={iterations:i.iterations,delay:i.delay,index:0};i.condition(d);){var f=e(d);c.push(f),d={iterations:i.iterations,delay:i.delay,index:c.length}}return a.all(c).then(function(a){b.resolve()}),b.promise}function g(){var b=a.defer(),c=function(){var a={iterations:i.iterations,delay:i.delay},d=i.condition(a);0==d?b.resolve():h(a).then(function(){i.iterations++,setTimeout(c,i.delay)})};return c(),b.promise}function h(b){var c=a.defer();return i.task(function(){c.resolve()},b),c.promise}if(!b)throw new Error("Argument 'condition' is invalid");if(!c)throw new Error("Argument 'task' is invalid");if(!d)throw new Error("Argument 'delay' is invalid");if("function"!=typeof b)throw new Error("Condition must be a function");if("function"!=typeof c)throw new Error("Task must be a function");if("number"!=typeof d)throw new Error("Delay must be a number");if(0>=d)throw new Error("Delay must be a number greater then zero");var i=this;return i.delay=d,i.condition=b,i.task=c,i.iterations=0,i.run=g,i.runParallel=f,i}function c(a,c,d){return new b(a,c,d)}if(!a)throw new Error("whiletrue requires 'Q' library");return c});